#include <conio.h>
#include <graphics.h>
#include <math.h>
#include <stdio.h>

// Function to draw the Hilbert Curve
void hilbertCurve(int x, int y, int xi, int xj, int yi, int yj, int n) {
    if (n <= 0) {
        line(x + (xi + yi) / 2, y + (xj + yj) / 2, 
             x + (xi - yi) / 2, y + (xj - yj) / 2);
    } else {
	hilbertCurve(x, y, yi / 2, yj / 2, xi / 2, xj / 2, n - 1);
	hilbertCurve(x + xi / 2, y + xj / 2, xi / 2, xj / 2, yi / 2, yj / 2, n - 1);
	hilbertCurve(x + xi / 2 + yi / 2, y + xj / 2 + yj / 2, xi / 2, xj / 2, yi / 2, yj / 2, n - 1);
	hilbertCurve(x + xi / 2 + yi, y + xj / 2 + yj, -yi / 2, -yj / 2, -xi / 2, -xj / 2, n - 1);
    }
}

int main() {
    int n,length,x0,y0;
    int gdriver = DETECT, gmode, errorcode;
    initgraph(&gdriver, &gmode, "C:\\Turboc3\\BGI");
    errorcode = graphresult();
    if (errorcode != grOk) {
	printf("Graphics error: %s\n", grapherrormsg(errorcode));
	printf("Press any key to exit...");
	getch();
	return 1;
    }


    printf("Enter the number of iterations: ");
    scanf("%d", &n);

    length = 512; // Length of the side of the square

    // Starting point for the Hilbert Curve
     x0 = getmaxx() / 4;
     y0 = getmaxy() / 4;

    hilbertCurve(x0, y0, length, 0, 0, length, n);

    getch();
    closegraph();
    return 0;
}